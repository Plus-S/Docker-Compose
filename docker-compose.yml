version: '3'
services:

  https-portal:
    image: steveltn/https-portal:1
    ports:
      - '80:80'
      - '443:443'
    links:
      - plus-s-api
    restart: always
    labels:
      com.centurylinklabs.watchtower.enable: false
    environment:
      DOMAINS: 'api.plus-s.com.ar -> http://plus-s-api:8000'
      #STAGE: 'production' # Don't use production until staging works
      FORCE_RENEW: 'true'
      PROXY_CONNECT_TIMEOUT: 60
      PROXY_SEND_TIMEOUT: 60;
      PROXY_READ_TIMEOUT: 60;

  plus-s-api:
    image: ghcr.io/plus-s/back-end-prod:latest
    command: python manage.py runserver plus-s-api:8000
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${PROD_DB_NAME}
      - POSTGRES_USER=${PROD_DB_USER}
      - POSTGRES_PASSWORD=${PROD_DB_PASSWORD}
      - POSTGRES_HOST=${PROD_DB_HOST}

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080
    labels:
      com.centurylinklabs.watchtower.enable: false
    environment:
      DOZZLE_LEVEL: trace
    healthcheck:
      test: [ "CMD", "/dozzle", "healthcheck" ]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s
      
  watchtower:
    image: containrrr/watchtower
    environment:
      - REPO_USER=${REPO_USER}
      - REPO_PASS=${REPO_PASS}
      - WATCHTOWER_POLL_INTERVAL=${WATCHTOWER_INTERVAL}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
    labels:
      com.centurylinklabs.watchtower.enable: false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/watchtower/config/:/config/
      
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    labels:
      com.centurylinklabs.watchtower.enable: false
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
